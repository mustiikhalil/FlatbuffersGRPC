
// Points are represented as latitude-longitude pairs in the E7 representation
// (degrees multiplied by 10**7 and rounded to the nearest integer).
// Latitudes should be in the range +/- 90 degrees and longitude should be in
// the range +/- 180 degrees (inclusive).
table Point {
  latitude: int;
  longitude: int;
}

// A latitude-longitude rectangle, represented as two diagonally opposite
// points "lo" and "hi".
table Rectangle {
  // One corner of the rectangle.
  lo: Point;
  // The other corner of the rectangle.
  hi: Point;
}

// A feature names something at a given point.
//
// If a feature could not be named, the name is empty.
table Feature {
  // The name of the feature.
  name: string;
  // The point where the feature is detected.
  location: Point;
}

table Features {
  feature: [Feature];
}

// A RouteNote is a message sent while at a given point.
table RouteNote {
  // The location from which the message is sent.
  location: Point;
  // The message to be sent.
  message: string;
}

// A RouteSummary is received in response to a RecordRoute rpc.
//
// It contains the number of individual points received, the number of
// detected features, and the total distance covered as the cumulative sum of
// the distance between each point.
table RouteSummary {
  // The number of points received.
  point_count: int;

  // The number of known features passed while traversing the route.
  feature_count: int;

  // The distance covered in metres.
  distance: int;

  // The duration of the traversal in seconds.
  elapsed_time: int;
}
